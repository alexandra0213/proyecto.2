document.addEventListener("DOMContentLoaded", () => {
    var botonEncriptar = document.querySelector("#btn-encrypt");
    var botonDesencriptar = document.querySelector("#btn-decrypt");
    var botonLimpiar = document.querySelector("#btn-clear");
    var cajatexto = document.querySelector("#input-text");
    var resultado = document.querySelector("#output-text");
    var metodoSelect = document.querySelector("#encryption-type");
    var shiftInput = document.querySelector("#shift");

    // Seleccionamos la imagen del gato y el contenedor de mensajes
    var gatoImagen = document.querySelector("#gato-imagen");
    var mensajeDiv = document.querySelector("#mensaje-gato");

// Mensajes graciosos del gato
var mensajesGato = [
    '¬°Miau! ¬°Tengo m√°s secretos que tu diario! üê±üîí',
    '¬øSab√≠as que los gatos son genios del espionaje? ü§´',
    '¬°No te preocupes! Solo estoy aqu√≠ para asegurarme de que no toques mi comida. üçΩÔ∏è',
    '¬øPuedo ayudar con tu c√≥digo? Solo si no es muy complicado... üß©',
    '¬°Mi cola est√° en modo radar! ¬°Estoy detectando diversi√≥n! üöÄ',
    '¬°Miau! ¬øPuedo ser tu ayudante secreto? üïµÔ∏è‚Äç‚ôÇÔ∏è',
    'Si ves algo raro en el c√≥digo, ¬°es culpa del rat√≥n! üê≠',
    '¬°Mi patita derecha es mi mejor herramienta de debugging! üêæ',
    '¬°Cuidado! Tengo un sentido agudo para detectar diversi√≥n y errores. üïµÔ∏è‚Äç‚ôÄÔ∏è',
    '¬°Sigo aprendiendo sobre programaci√≥n, pero por ahora solo s√© c√≥mo dormir en el teclado! üí§',
    '¬°Estoy aqu√≠ para supervisar tus habilidades de programaci√≥n y para asegurarme de que no olvides jugar! üéÆ',
    '¬°No dejes que el c√≥digo te vuelva loco! Si lo haces, yo estar√© aqu√≠ para darte mimos. üêæ',
    '¬øSab√≠as que los gatos tienen un 99% de probabilidades de encontrar el lugar m√°s c√≥modo del sof√°? üõãÔ∏è',
    '¬°Voy a ser tu compa√±ero de programaci√≥n! O al menos, tu compa√±ero de siestas. üí§',
    '¬øPuedo ayudarte a depurar? Solo si me das un poco de at√∫n primero. üêü',
    '¬°Estoy aqu√≠ para hacer que el proceso de depuraci√≥n sea un poco m√°s divertido! üò∏',
    '¬°No dejes que el c√≥digo te estrese! Piensa en m√≠, siempre relajado y durmiendo. üí§',
    '¬°Miau! Si est√°s atascado, solo recuerda que los gatos siempre encuentran una salida. üóùÔ∏è',
    '¬°No puedo escribir c√≥digo, pero puedo ofrecerte un mont√≥n de ternura! üê±'
];

    

    // Funci√≥n para mostrar un mensaje aleatorio del gato
    function mostrarMensajeGato() {
        var mensajeAleatorio = mensajesGato[Math.floor(Math.random() * mensajesGato.length)];
        mensajeDiv.textContent = mensajeAleatorio;
    }

    // A√±adir eventos a la imagen del gato
    gatoImagen.addEventListener('click', mostrarMensajeGato);
    gatoImagen.addEventListener('mouseover', mostrarMensajeGato);
    gatoImagen.addEventListener('mouseout', () => {
        mensajeDiv.textContent = ''; // Limpiar el mensaje cuando el rat√≥n sale de la imagen
    });

    // Funci√≥n para manejar el clic en el bot√≥n de encriptar
    botonEncriptar.onclick = function() {
        var metodo = metodoSelect.value;
        var texto = recuperarTexto();
        resultado.value = encriptarTexto(texto, metodo);
    }

    // Funci√≥n para manejar el clic en el bot√≥n de desencriptar
    botonDesencriptar.onclick = function() {
        var metodo = metodoSelect.value;
        var texto = recuperarTexto();
        resultado.value = desencriptarTexto(texto, metodo);
    }

    // Funci√≥n para manejar el clic en el bot√≥n de limpiar
    botonLimpiar.onclick = limpiar;

    // Recupera el texto del √°rea de entrada
    function recuperarTexto() {
        return cajatexto.value;
    }

    // Encripta el texto basado en el m√©todo seleccionado
    function encriptarTexto(texto, metodo) {
        switch (metodo) {
            case 'base64':
                return encriptarBase64(texto);
            case 'hex':
                return encriptarHex(texto);
            case 'rot13':
                return encriptarROT13(texto);
            case 'caesar':
                return encriptarCesar(texto, parseInt(shiftInput.value) || 3); // Usar valor del input para el desplazamiento
            case 'binario':
                return encriptarTextoABinario(texto);
            default:
                return texto;
        }
    }

    // Desencripta el texto basado en el m√©todo seleccionado
    function desencriptarTexto(texto, metodo) {
        switch (metodo) {
            case 'base64':
                return desencriptarBase64(texto);
            case 'hex':
                return desencriptarHex(texto);
            case 'rot13':
                return encriptarROT13(texto); // ROT13 es sim√©trico
            case 'caesar':
                return desencriptarCesar(texto, parseInt(shiftInput.value) || 3); // Usar valor del input para el desplazamiento
            case 'binario':
                return desencriptarBinarioATexto(texto);
            default:
                return texto;
        }
    }

    // Funci√≥n para encriptar texto en Base64
    function encriptarBase64(texto) {
        return btoa(texto);
    }

    // Funci√≥n para desencriptar texto en Base64
    function desencriptarBase64(texto) {
        return atob(texto);
    }

    // Funci√≥n para encriptar texto a formato hexadecimal
    function encriptarHex(texto) {
        return Array.from(texto).map(c => c.charCodeAt(0).toString(16).padStart(2, '0')).join('');
    }

    // Funci√≥n para desencriptar texto de formato hexadecimal
    function desencriptarHex(texto) {
        return texto.match(/.{1,2}/g).map(h => String.fromCharCode(parseInt(h, 16))).join('');
    }

    // Funci√≥n para encriptar texto usando ROT13
    function encriptarROT13(texto) {
        return texto.replace(/[a-zA-Z]/g, function(c) {
            var code = c.charCodeAt(0);
            if (code >= 65 && code <= 90) return String.fromCharCode(((code - 65 + 13) % 26) + 65);
            if (code >= 97 && code <= 122) return String.fromCharCode(((code - 97 + 13) % 26) + 97);
        });
    }

    // Funci√≥n para encriptar texto usando Cifra de C√©sar
    function encriptarCesar(texto, desplazamiento) {
        return texto.replace(/[a-zA-Z]/g, function(c) {
            var code = c.charCodeAt(0);
            var base = (code >= 65 && code <= 90) ? 65 : 97;
            return String.fromCharCode(((code - base + desplazamiento) % 26) + base);
        });
    }

    // Funci√≥n para desencriptar texto usando Cifra de C√©sar
    function desencriptarCesar(texto, desplazamiento) {
        return encriptarCesar(texto, 26 - desplazamiento);
    }

    // Funci√≥n para encriptar texto a formato binario
    function encriptarTextoABinario(texto) {
        return Array.from(texto).map(c => c.charCodeAt(0).toString(2).padStart(8, '0')).join(' ');
    }

    // Funci√≥n para desencriptar texto de formato binario
    function desencriptarBinarioATexto(texto) {
        return texto.split(' ').map(b => String.fromCharCode(parseInt(b, 2))).join('');
    }

    // Funci√≥n para limpiar los campos de texto
    function limpiar() {
        cajatexto.value = "";
        resultado.value = "";
        mensajeDiv.textContent = ''; // Limpiar el mensaje del gato
    }
});
